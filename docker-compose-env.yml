######## 项目依赖的环境，启动项目之前要先启动此环境 #######

services:
  #网关nginx
  nginx-gateway:
    image: nginx:1.20.2-alpine
    container_name: nginx-gateway
    restart: always
    privileged: true
    environment:
      - TZ=Asia/Shanghai
    ports:
      - 8070:8070
    volumes:
      - ./deploy/nginx/conf.d:/etc/nginx/conf.d
      - ./deploy/nginx/log:/var/log/nginx
      - ./frontend:/var/nginx/frontend
    network_mode: host

  # etcd:
  #   image: docker.io/bitnami/etcd:3.5
  #   environment:
  #     - ALLOW_NONE_AUTHENTICATION=yes
  #   ports:
  #     - 2379:2379
  #     - 2380:2380
  #   network_mode: host
  
  # jaeger链路追踪
  # jaeger:
  #   image: jaegertracing/all-in-one:latest
  #   container_name: jaeger
  #   ports:
  #     - "5775:5775/udp"
  #     - "6831:6831/udp"
  #     - "6832:6832/udp"
  #     - "5778:5778"
  #     - "16686:16686"
  #     - "14268:14268"
  #     - "9411:9411"
  #   environment:
  #     - SPAN_STORAGE_TYPE=elasticsearch
  #     - ES_SERVER_URLS=http://elasticsearch:9200
  #     - LOG_LEVEL=debug
  #   networks:
  #     - douyin_net

  #prometheus监控
  # mysql:
  #   image: "mysql:9.2.0"
  #   ports:
  #     - 3306:3306
  #   environment:
  #     - MYSQL_ROOT_PASSWORD=password1234
  #     - MYSQL_USER=mysqluser
  #     - MYSQL_PASSWORD=password1234
  #     - MYSQL_DATABASE=product
  # etcd:
  #   image: docker.io/bitnami/etcd:3.5
  #   container_name: etcd
  #   ports:
  #     - 2379:2379
  #     - 2380:2380
  #   volumes:
  #     - ./etcd/data:/bitnami/etcd-data
  #   environment:
  #     - TZ=Asia/Shanghai
  #     - ALLOW_NONE_AUTHENTICATION=yes
  #     - ETCD_ADVERTISE_CLIENT_URLS=http://etcd:2379
  prometheus:
    image: prom/prometheus:latest
    container_name: prometheus
    environment:
      # 时区上海
      TZ: Asia/Shanghai
    volumes:
      - ./deploy/prometheus/prometheus.yml:/etc/prometheus/prometheus.yml
      - ./data/prometheus/data:/prometheus
    command:
      - '--config.file=/etc/prometheus/prometheus.yml'
      - '--storage.tsdb.path=/prometheus'
    restart: always
    user: root
    ports:
      - 9090:9090
    network_mode: host
    # networks:
    #   - douyin_net

  #查看prometheus监控数据
  grafana:
    image: grafana/grafana:latest
    container_name: grafana
    hostname: grafana
    environment:
      - GF_AUTH_ANONYMOUS_ENABLED=true
      - GF_AUTH_ANONYMOUS_ORG_ROLE=Admin
      - GF_AUTH_DISABLE_LOGIN_FORM=true
      # 时区上海
      # TZ: Asia/Shanghai
    restart: always
    volumes:
        - ./data/grafana/data:/var/lib/grafana
    ports:
        - "3000:3000"
    network_mode: host
    # networks:
    #     - douyin_net
  # RocketMQ
  namesrv:
    image: apache/rocketmq:latest
    container_name: rmqnamesrv
    command: sh mqnamesrv
    ports:
      - 9876:9876
    networks:
      - douyin_net
    volumes:
      # 将日志和存储目录挂载到主机，方便持久化数据与日志查看
      - ./data/rocketmq_data/logs:/home/rocketmq/logs
      - ./data/rocketmq_data/store:/home/rocketmq/store

  broker:
    image: apache/rocketmq:latest
    container_name: rmqbroker
    depends_on:
      - namesrv
    command: sh mqbroker --enable-proxy -c /home/rocketmq/rocketmq/broker.conf
    ports:
      - 10911:10911  # Broker 的主服务端口
      - 10909:10909  # Broker 的通信端口
      - 10912:10912
    environment:
      # 指定 NameSrv 地址
      - NAMESRV_ADDR=rmqnamesrv:9876
    networks:
      - douyin_net
    volumes:
      - ./data/rocketmq_data/logs:/home/rocketmq/logs
      - ./data/rocketmq_data/store:/home/rocketmq/store
      - ./deploy/rocketmq/:/home/rocketmq/rocketmq

#  #搜集kafka业务日志、存储prometheus监控数据
  # elasticsearch:
  #   image: docker.elastic.co/elasticsearch/elasticsearch:7.13.4
  #   container_name: elasticsearch
  #   environment:
  #     - discovery.type=single-node
  #     - "ES_JAVA_OPTS=-Xms512m -Xmx512m"
  #     - TZ=Asia/Shanghai
  #   volumes:
  #     - ./data/elasticsearch/data:/usr/share/elasticsearch/data
  #   restart: always
  #   ports:
  #   - 9200:9200
  #   - 9300:9300
  #   networks:
  #     - douyin_net

  #查看elasticsearch数据
  # kibana:
  #   image: docker.elastic.co/kibana/kibana:7.13.4
  #   container_name: kibana
  #   environment:
  #     - elasticsearch.hosts=http://elasticsearch:9200
  #     - TZ=Asia/Shanghai
  #   restart: always
  #   networks:
  #     - douyin_net
  #   ports:
  #     - "5601:5601"
  #   depends_on:
  #     - elasticsearch

  #消费kafka中filebeat收集的数据输出到es
  # go-stash:
  #   image: kevinwan/go-stash:latest
  #   container_name: go-stash
  #   environment:
  #     # 时区上海
  #     TZ: Asia/Shanghai
  #   user: root
  #   restart: always
  #   volumes:
  #     - ./deploy/go-stash/etc:/app/etc
  #   networks:
  #     - douyin_net
  #   depends_on:
  #     - elasticsearch
  #     - kafka

  #收集业务数据
  # filebeat:
  #   image: elastic/filebeat:7.13.4
  #   entrypoint: "filebeat -e -strict.perms=false"
  #   container_name: filebeat
  #   environment:
  #     # 时区上海
  #     TZ: Asia/Shanghai
  #   user: root
  #   restart: always
  #   volumes:
  #     - ./deploy/filebeat/conf/filebeat.yml:/usr/share/filebeat/filebeat.yml
  #     - /var/lib/docker/containers:/var/lib/docker/containers
  #   networks:
  #     - douyin_net
  #   depends_on:
  #     - kafka


  #zookeeper是kafka的依赖
  # zookeeper:
  #   image: wurstmeister/zookeeper
  #   container_name: zookeeper
  #   environment:
  #     # 时区上海
  #     TZ: Asia/Shanghai
  #   restart: always
  #   ports:
  #     - 2181:2181
  #   networks:
  #     - douyin_net

  #消息队列
  # kafka:
  #   image: wurstmeister/kafka
  #   container_name: kafka
  #   ports:
  #     - 9092:9092
  #   environment:
  #     KAFKA_ADVERTISED_HOST_NAME: kafka
  #     KAFKA_ZOOKEEPER_CONNECT: zookeeper:2181
  #     TZ: Asia/Shanghai
  #   restart: always
  #   volumes:
  #     - /var/run/docker.sock:/var/run/docker.sock
  #   networks:
  #     - douyin_net
  #   depends_on:
  #     - zookeeper

  #asynqmon asynq延迟队列、定时队列的webui
  # asynqmon:
  #   image: hibiken/asynqmon:latest
  #   container_name: asynqmon
  #   ports:
  #     - 8980:8080
  #   command:
  #     - '--redis-addr=redis:6379'
  #     - '--redis-password=G62m50oigInC30sf'
  #   restart: always
  #   networks:
  #     - douyin_net
  #   depends_on:
  #     - redis

  # mysql:
  #   image: mysql:8.0.24
  #   container_name: mysql
  #   environment:
  #     # 时区上海
  #     TZ: Asia/Shanghai
  #     # root 密码
  #     MYSQL_ROOT_PASSWORD: PXDN93VRKUm8TeE7
  #   ports:
  #     - 33069:3306
  #   volumes:
  #     # 数据挂载
  #     - ./data/mysql/data:/var/lib/mysql
  #     # 日志
  #   command:
  #     # 将mysql8.0默认密码策略 修改为 原先 策略 (mysql8.0对其默认策略做了更改 会导致密码无法匹配)
  #     --default-authentication-plugin=mysql_native_password
  #     --character-set-server=utf8mb4
  #     --collation-server=utf8mb4_general_ci
  #     --explicit_defaults_for_timestamp=true
  #     --lower_case_table_names=1
  #   privileged: true
  #   restart: always
  #   networks:
  #     - douyin_net

  #redis容器
  # redis:
  #   image: redis:6.2.5
  #   container_name: redis
  #   ports:
  #     - 36379:6379
  #   environment:
  #     # 时区上海
  #     TZ: Asia/Shanghai
  #   volumes:
  #     # 数据文件
  #     - ./data/redis/data:/data:rw
  #   command: "redis-server --requirepass G62m50oigInC30sf  --appendonly yes"
  #   privileged: true
  #   restart: always
  #   networks:
  #     - douyin_net


networks:
  douyin_net:
    driver: bridge
    # ipam:
    #   config:
    #     - subnet: 172.20.0.0/16

