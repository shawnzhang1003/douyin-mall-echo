######## 项目依赖的环境，启动项目之前要先启动此环境 #######
## 联调用
services:
  mysql:
    image: "mysql:9.2.0"
    ports:
      - 3306:3306
    environment:
      - MYSQL_ROOT_PASSWORD=password1234
      - MYSQL_USER=mysqluser
      - MYSQL_PASSWORD=password1234
      - MYSQL_DATABASE=douyinmall
  etcd:
    image: docker.io/bitnami/etcd:3.5
    container_name: etcd
    ports:
      - 2379:2379
      - 2380:2380
    volumes:
      - ./etcd/data:/bitnami/etcd-data
    environment:
      - TZ=Asia/Shanghai
      - ALLOW_NONE_AUTHENTICATION=yes
      - ETCD_ADVERTISE_CLIENT_URLS=http://etcd:2379
  # prometheus:
  #   image: prom/prometheus:latest
  #   container_name: prometheus
  #   environment:
  #     # 时区上海
  #     TZ: Asia/Shanghai
  #   volumes:
  #     - ./deploy/prometheus/prometheus.yml:/etc/prometheus/prometheus.yml
  #     - ./data/prometheus/data:/prometheus
  #   command:
  #     - '--config.file=/etc/prometheus/prometheus.yml'
  #     - '--storage.tsdb.path=/prometheus'
  #   restart: always
  #   user: root
  #   ports:
  #     - 9090:9090
  #   network_mode: host
    # networks:
    #   - douyin_net

  #查看prometheus监控数据
  # grafana:
  #   image: grafana/grafana:latest
  #   container_name: grafana
  #   hostname: grafana
  #   environment:
  #     - GF_AUTH_ANONYMOUS_ENABLED=true
  #     - GF_AUTH_ANONYMOUS_ORG_ROLE=Admin
  #     - GF_AUTH_DISABLE_LOGIN_FORM=true
  #     # 时区上海
  #     # TZ: Asia/Shanghai
  #   restart: always
  #   volumes:
  #       - ./data/grafana/data:/var/lib/grafana
  #   ports:
  #       - "3000:3000"
  #   network_mode: host

  # RocketMQ
  namesrv:
    image: apache/rocketmq:5.3.1
    container_name: rocketmq-namesrv
    ports:
      - "9876:9876"
    command: sh mqnamesrv
    networks:
      - rocketmq
    restart: always

  broker:
    image: apache/rocketmq:5.3.1
    container_name: rocketmq-broker
    ports:
      - "10911:10911"
      - "10909:10909"
    environment:
      - NAMESRV_ADDR=namesrv:9876
    command: sh /home/rocketmq/rocketmq-5.3.1/bin/mqbroker
    depends_on:
      - namesrv
    networks:
      - rocketmq
    restart: always

  dashboard:
    image: apacherocketmq/rocketmq-dashboard:latest
    container_name: rocketmq-dashboard
    ports:
      - "8989:8989"
    environment:
      - JAVA_OPTS=-Drocketmq.namesrv.addr=namesrv:9876
      - SERVER_PORT=8989  # 设置环境变量
    depends_on:
      - namesrv
      - broker
    networks:
      - rocketmq
    restart: always



  redis1:
    image: "redis:latest"
    container_name: "my_redis"
    ports:
      - "6379:6379"
    volumes:
      - redis_data1:/data
      


  redis2:
    image: "redis:latest"
    container_name: "my_redis-2"
    ports:
      - "6380:6380"
    # environment:
    #   - PORT=6380  # 设置 Redis 的运行端口
    command: redis-server --port 6380  # 使用环境变量指定端口
    volumes:
      - redis_data2:/data

volumes:
  redis_data1:   
  redis_data2:   


networks:
  rocketmq:
    driver: bridge
